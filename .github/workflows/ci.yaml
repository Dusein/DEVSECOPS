name: CI/CD Pipeline

on:
  push:
    branches:
      - Tes
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  build:
    name: Build Stage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose --version

      - name: Build Docker Containers
        run: docker-compose up -d --build

  test:
    name: Test Stage
    runs-on: ubuntu-latest
    needs: build

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: db_mahasiswa
          MYSQL_USER: root
          MYSQL_PASSWORD: ""
        ports:
          - 3306:3306

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mysqli

      - name: Fetch MySQL Container Logs
        run: |
          echo "Fetching MySQL container logs..."
          docker ps
          docker logs $(docker ps -q --filter ancestor=mysql:8.0) || echo "No logs available for MySQL container."

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL..."
          for i in {1..120}; do
            if mysqladmin ping -h 127.0.0.1 --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "MySQL is not ready yet. Retrying in 1 second..."
            sleep 1
          done
          if ! mysqladmin ping -h 127.0.0.1 --silent; then
            echo "MySQL failed to start within 120 seconds."
            exit 1
          fi

      - name: Test MySQL Connection
        run: |
          echo "Testing MySQL connection..."
          mysql -h 127.0.0.1 -u root -prootpassword -e "SHOW DATABASES;"

      - name: Debug Docker Containers
        run: |
          echo "Listing running containers..."
          docker ps -a
          echo "Inspecting MySQL container..."
          docker inspect $(docker ps -q --filter ancestor=mysql:8.0)

name: CI/CD Pipeline

on:
  push:
    branches:
      - pipeline
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, intl, xml, curl, pdo_mysql

      - name: Install dependencies
        run: composer install

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, intl, xml, curl, pdo_mysql

      - name: Import database
        run: |
          sleep 30
          mysql -h 127.0.0.1 -uroot -proot test_db < path/to/database.sql

      - name: Run unit tests
        run: ./vendor/bin/phpunit --testdox tests

  sast:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Security scan using PHPStan
        run: ./vendor/bin/phpstan analyse src

  dast:
    runs-on: ubuntu-latest
    needs: sast
    steps:
      - name: OWASP ZAP Scan
        uses: jenkinsci/zap-action@v0.4.0
        with:
          target: 'http://localhost:8000'
          rules-file: '.zap/rules.json'

  deploy:
    runs-on: ubuntu-latest
    needs: dast
    steps:
      - name: Deploy to Staging
        run: |
          echo "Deploying to staging environment"
          # Tambahkan skrip deploy yang sesuai, misalnya rsync atau SSH
